// <auto-generated />
using System;
using BTL.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BTL.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20250101043441_luong")]
    partial class luong
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BTL.Data.Admin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Admin");
                });

            modelBuilder.Entity("BTL.Data.CongViec", b =>
                {
                    b.Property<int>("MaCV")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaCV"), 1L, 1);

                    b.Property<string>("TenCV")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("MaCV");

                    b.ToTable("CongViec");
                });

            modelBuilder.Entity("BTL.Data.HopDong", b =>
                {
                    b.Property<string>("MaHD")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DenNgay")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LoaiHD")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaNV")
                        .HasColumnType("int");

                    b.Property<string>("TuNgay")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaHD");

                    b.HasIndex("MaNV");

                    b.ToTable("HopDong");
                });

            modelBuilder.Entity("BTL.Data.Luong", b =>
                {
                    b.Property<string>("BacLuong")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("HSLuong")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HSPC")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LuongCB")
                        .HasColumnType("int");

                    b.Property<decimal>("TongLuong")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("BacLuong");

                    b.ToTable("Luong");
                });

            modelBuilder.Entity("BTL.Data.NhanVien", b =>
                {
                    b.Property<int>("MaNV")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaNV"), 1L, 1);

                    b.Property<string>("Anh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BacLuong")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DanToc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DienThoai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GioiTinh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("MaCV")
                        .HasColumnType("int");

                    b.Property<int>("MaPB")
                        .HasColumnType("int");

                    b.Property<int>("MaTDHV")
                        .HasColumnType("int");

                    b.Property<string>("NgaySinh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QueQuan")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("MaNV");

                    b.HasIndex("BacLuong");

                    b.HasIndex("MaCV");

                    b.HasIndex("MaPB");

                    b.HasIndex("MaTDHV");

                    b.ToTable("NhanVien");
                });

            modelBuilder.Entity("BTL.Data.PhongBan", b =>
                {
                    b.Property<int>("MaPB")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaPB"), 1L, 1);

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SDTPB")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenPB")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("MaPB");

                    b.ToTable("PhongBan");
                });

            modelBuilder.Entity("BTL.Data.RefreshToken", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdminId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ExpiredAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsRevoked")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("bit");

                    b.Property<DateTime>("IssuedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("JwtId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AdminId");

                    b.ToTable("RefreshTokens");
                });

            modelBuilder.Entity("BTL.Data.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"), 1L, 1);

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleId");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("BTL.Data.TrinhDoHocVan", b =>
                {
                    b.Property<int>("MaTDHV")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaTDHV"), 1L, 1);

                    b.Property<string>("CNganh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenTDHV")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaTDHV");

                    b.ToTable("TrinhDoHocVan");
                });

            modelBuilder.Entity("BTL.Data.Admin", b =>
                {
                    b.HasOne("BTL.Data.Role", "Role")
                        .WithMany("Admins")
                        .HasForeignKey("RoleId");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("BTL.Data.HopDong", b =>
                {
                    b.HasOne("BTL.Data.NhanVien", "NhanVien")
                        .WithMany()
                        .HasForeignKey("MaNV")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NhanVien");
                });

            modelBuilder.Entity("BTL.Data.NhanVien", b =>
                {
                    b.HasOne("BTL.Data.Luong", "luong")
                        .WithMany("NhanViens")
                        .HasForeignKey("BacLuong")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BTL.Data.CongViec", "CongViec")
                        .WithMany("NhanViens")
                        .HasForeignKey("MaCV")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BTL.Data.PhongBan", "PhongBan")
                        .WithMany("NhanViens")
                        .HasForeignKey("MaPB")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BTL.Data.TrinhDoHocVan", "TrinhDoHocVan")
                        .WithMany("NhanViens")
                        .HasForeignKey("MaTDHV")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CongViec");

                    b.Navigation("PhongBan");

                    b.Navigation("TrinhDoHocVan");

                    b.Navigation("luong");
                });

            modelBuilder.Entity("BTL.Data.RefreshToken", b =>
                {
                    b.HasOne("BTL.Data.Admin", "Admin")
                        .WithMany()
                        .HasForeignKey("AdminId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Admin");
                });

            modelBuilder.Entity("BTL.Data.CongViec", b =>
                {
                    b.Navigation("NhanViens");
                });

            modelBuilder.Entity("BTL.Data.Luong", b =>
                {
                    b.Navigation("NhanViens");
                });

            modelBuilder.Entity("BTL.Data.PhongBan", b =>
                {
                    b.Navigation("NhanViens");
                });

            modelBuilder.Entity("BTL.Data.Role", b =>
                {
                    b.Navigation("Admins");
                });

            modelBuilder.Entity("BTL.Data.TrinhDoHocVan", b =>
                {
                    b.Navigation("NhanViens");
                });
#pragma warning restore 612, 618
        }
    }
}
